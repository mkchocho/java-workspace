/*
 * DAO(Data Access Object)
 * : DB에 직접 접근해서 사용자의 요청에 맞는 SQL문을 실행한 후 결과를 받음.(JDBC이용)
 *   결과를 Controller로 반환함.
 * 
 * >> Statement와 PrerparedStatement의 특징
 * - 두 객체 모두 sql문을 실행하고 결과를 받아내는 객체. Connection 객체를 이용해서 생성.(둘 중 하나 이용)
 * - Statement가 PrerparedStatement의 부모(상속 구조)
 * 
 * 
 * - Statement와 PrerparedStatement의 차이점
 * - Statement는 sql문을 전달하면서 바로 실행하는 객체
 * 	(즉, sql문을 완성형태로 만들어야함. => 사용자가 입력한 값이 완전히 채워진 사애. 그렇지 않으면 SQL 예외 발생)
 * 
 * 
 *	> 기존의 Statement 방식
 *		1) Connection 객체를 통해 Statement 객체 생성
 *			- stmt = conn.createStatement ();
 *		2) Statement객체를 통해서 완성된 sql문 실행 및 결과 받기
 *			- rset = stmt.executeXXX(완성된 sql) 
 *									(select > xxx에 query : 결과를 받을 필요 없을 때, insert,update, delete > xxx에 update : int값 반환)
 * 
 * 
 * * PreparedStatement 같은 경우 미완성 sql문을 잠시 보관해두었다가 나중에 완성한 후 실행할 수 있는 객체
 * 		(즉, 사용자가 입력한 값을 채워두지 않고 각각 들어갈 공간(? 사용)을 미리 확보만 해두면 됨.)
 * 
 * 	> PrerparedStatement 방식
 *	 	1) Connection 객체를 통해 PreparedStatement 객체 생성
 * 			- pstmt = conn.prepareStatement (미완성 sql문) ;
 * 		2) pstmt에 담긴 sql문이 미완성 상태일 때 우선 완성시켜야함.
 * 			- pstmt.setXXX(1, 대체할값);
 * 			- pstmt.setXXX(2, 대체할값);
 * 		3) sql문 실행 및 결과 받기
 * 			- 결과(rset 또는 int변수) = pstmt.executeXXX();
 * 		
 */
-----------------------------------------------------------------------------------

Run(main)								┐
↓									│
MainMenu(화면 - 메뉴)				Veiw		│
↓									│	
MemberController(메뉴에 해당하는 기능)	Controller	│	┐
↓									│	│<= Member(VO)
MemberService							│	│
↓									│	│	
MemberDao(데이터처리)				Model		│	│
	└→JDBC 통해서 DB						│	┘
									┘